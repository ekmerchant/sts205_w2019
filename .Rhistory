print("I installed R and RStudio!")
install.packages("rmarkdown")
install.packages("dplyr")
a <- 3
b4 <- 5
cat <- 7
a
b4
cat
a + b4 - cat
a + b4 - cat
cat - 3 + b4
a
a <- 9
a
(dog <- 12)
cat*dog
dog/cat
cat*dog
dog/cat*cat
f <- cat - b4
(f <- cat - b4)
x <- 'he said, "bye"'
x
y
g <- "history"
hi <- "is fun"
twelve <- "12"
y <- "she said, 'hi'"
x <- 'he said, "bye"'
x
y
(x <- "she said 'hi'")
(y <- 'she said "hi"')
(z <- "she said \"hi\"")
(x <- "she said 'hi'")
(y <- 'she said "hi"')
(z <- "she said \"hi\"")
y == z
(x <- "she said 'hi'")
(y <- 'she said "hi"')
(z <- "she said \"hi\"")
y == z
x == y
x == z
plot(cars)
install.packages("tinytex")
install.packages("tlmgr")
library(tinytex)
tinytex::install_tinytex()
tinytex::install_tinytex()
1 + 2
#Create a vector of numbers 101 through 132
vectorObj <- 101:132
#Create a vector of numbers 101 through 132
vectorObj <- 101:132
#See 20th element
vectorObj[20]
#Humanities Data in R 2.5: Subsetting
#Create a vector of numbers 101 through 132
vectorObj <- 101:132
vectorObj
#See 20th element
vectorObj[20]
#Create a new variable with the value of the 20th element
(y <- vectorObj[20])
#Change the value of the 17th element to -2
vectorObj[17] <- -2
vectorObj
#Return elements 6, 17, 20, 30 of vectorObj
vectorObj[c(6, 17, 20, 30)]
#Create a new vector whose values are elements 5-10 of vectorObj
subVec <- vectorObj[5:10]
subVec
#View a vector of length three where every element is equal to element 20 from vectorObj
vectorObj[c(20, 20, 20)]
length(vectorObj)
vectorObj[length(vectorObj)]
#This gives us the whole vector in reverse order:
vectorObj[length(vectorObj):1]
#We can change several elements of the vector at once.
#This replaces the first ten elements with the number 1:
vectorObj[1:10] <- 1
vectorObj
#This replaces the first ten elements with the numbers 1 through 10:
vectorObj[1:10] <- 1:10
vectorObj
#Restoring our original vectorObj:
vectorObj <- 101:132
#We can also use negative numbers in subsetting:
vectorObj[-1]
vectorObj
vectorObj[-c(1, length(vectorObj))]
vectorObj
#Finally, we can use logical values to subset a vector
vectorObj <- 1:8
vectorObj[c(TRUE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE)]
vectorObj
#A potentially more useful example creates a logical index to produce a subset of elements greater than 5:
logicalIndex <- vectorObj > 5
logicalIndex
vectorObj[logicalIndex]
vectorObj[vectorObj > 5]
#We can also use this priciple to replace values of a vector:
vectorObj <- 1:100
vectorObj
vectorObj[vectorObj <= 25] <- 25
vectorObj
vectorObj[vectorObj >= 75] <- 75
vectorObj
install.packages("rmarkdown")
install.packages("tinytex")
tinytex::install_tinytex()
plot(cars)
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Cmd+Shift+Enter*.
stringVec <- c("pear", "apple", "pineapple")
stringVec <- c("pear", "apple", "pineapple")
class(stringVec)
stringVec <- c("pear", "apple", "pineapple")
class(stringVec)
stringVec[2]
stringVec <- c("pear", "apple", "pineapple")
class(stringVec)
stringVec[2]
stringVec
stringVec <- c("pear", "apple", "pineapple")
class(stringVec)
stringVec[2]
stringVec
fruit <- "apples and oranges"
paste(stringVec, "juice", sep = " ")
newVec <- paste(stringVec, "juice", sep = " ")
(newVec <- paste(stringVec, "juice", sep = " "))
(newVec <- paste(stringVec, "juice", sep = " "))
class(newVec)
(newVec <- paste(stringVec, "juice", sep = " "))
class(newVec)
length(newVec)
(newVec <- paste(stringVec, "juice"))
class(newVec)
length(newVec)
substr(stringVec, start = 2, stop = 4)
substr(stringVec, start = 2, stop = 4)
substr(stringVec[1], 2, 4)
substr(stringVec, start = 2, stop = 4)
substr(stringVec[1], 2, 4)
substr("science", 3, 6)
nchar(stringVec)
nchar(stringVec)
substr(stringVec, 3, nchar(stringVec))
index <- grep("apple", stringVec)
grep(pattern = "apple", x = stringVec)
grep("apple", stringVec)
grep("apple", stringVec)
grep("apple", "pineapple")
grep("apple", stringVec)
grep("apple", "pineapple")
stringVec[grep("apple", stringVec)]
x <- 8
y <- "word"
x2 <- c(4:8)
y2 <- c("I like cats", "dogs bark", "the dog ate the bird")
cat <- 4
twelve <- "12"
class(twelve)
class(twelve)
twelve + 1
class(twelve)
twelve + 1
class(twelve)
as.numeric(twelve) + 1
paste(4:12, "th", sep="")
class(4:12)
paste(4:12, "th", sep="")
class(4:12)
class(paste(4:12, "th", sep=""))
class(4:12)
paste(4:12, "th", sep="")
stringVec <- c("pear", "apple", "pineapple")
class(stringVec)
stringVec[2]
stringVec
fruit <- "apples and oranges"
(newVec <- paste(stringVec, "juice", sep = " "))
class(newVec)
length(newVec)
substr(stringVec, start = 2, stop = 4)
substr(stringVec[1], 2, 4)
substr("science", 3, 6)
nchar(stringVec)
substr(stringVec, 3, nchar(stringVec))
grep("apple", stringVec)
grep("apple", "pineapple")
stringVec[grep("apple", stringVec)]
source('~/Dropbox/UCDavis/teaching/quarters/winter_2019/sts205/sts205_w2019/render.r')
source('~/Dropbox/UCDavis/teaching/quarters/winter_2019/sts205/sts205_w2019/render.r')
source('~/Dropbox/UCDavis/teaching/quarters/winter_2019/sts205/sts205_w2019/render.r')
